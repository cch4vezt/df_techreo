{
	"name": "Pipeline_logt_ProvidersLog_manual",
	"properties": {
		"description": "Para generar json por d√≠a de la bd [logt_ProvidersLog] de forma manual, hay que cambiar la fecha.",
		"activities": [
			{
				"name": "Copy_q2w",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.23:59:59",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "."
					},
					{
						"name": "Destination",
						"value": "output-df//logt_ProvidersLog_01012023.json"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": "SELECT [Id]\n      ,[Service]\n      ,[TransactionId]\n      ,[Provider]\n      ,[Method]\n      ,[Request]\n      ,[Response]\n      ,[UserCreationId]\n      ,[CreationDate]\n      ,[UserLastModifiedId]\n      ,[DateLastModificationId]\n      ,[IsActive]\n      ,[Url_t]\n      ,[Headers_t]\nFROM [Cmn_Log].[dbo].[logt_ProvidersLog]\nwhere [CreationDate] between\n\t(\n\tselect cast('2023-04-01 00:00:00:000' as datetime)\n\t)\nand\n\t(\n\tselect dateadd(millisecond, -2, dateadd(day, 30, cast('2023-04-01 00:00:00:000' as datetime)))\n\t)\norder by [Id] asc, [CreationDate] asc",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "setOfObjects"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Id",
									"type": "Int64"
								},
								"sink": {
									"path": "$['Id']"
								}
							},
							{
								"source": {
									"name": "Service",
									"type": "String"
								},
								"sink": {
									"path": "$['Service']"
								}
							},
							{
								"source": {
									"name": "TransactionId",
									"type": "String"
								},
								"sink": {
									"path": "$['TransactionId']"
								}
							},
							{
								"source": {
									"name": "Provider",
									"type": "String"
								},
								"sink": {
									"path": "$['Provider']"
								}
							},
							{
								"source": {
									"name": "Method",
									"type": "String"
								},
								"sink": {
									"path": "$['Method']"
								}
							},
							{
								"source": {
									"name": "Request",
									"type": "String"
								},
								"sink": {
									"path": "$['Request']"
								}
							},
							{
								"source": {
									"name": "Response",
									"type": "String"
								},
								"sink": {
									"path": "$['Response']"
								}
							},
							{
								"source": {
									"name": "UserCreationId",
									"type": "String"
								},
								"sink": {
									"path": "$['UserCreationId']"
								}
							},
							{
								"source": {
									"name": "CreationDate",
									"type": "DateTime"
								},
								"sink": {
									"path": "$['CreationDate']"
								}
							},
							{
								"source": {
									"name": "UserLastModifiedId",
									"type": "String"
								},
								"sink": {
									"path": "$['UserLastModifiedId']"
								}
							},
							{
								"source": {
									"name": "DateLastModificationId",
									"type": "DateTime"
								},
								"sink": {
									"path": "$['DateLastModificationId']"
								}
							},
							{
								"source": {
									"name": "IsActive",
									"type": "Boolean"
								},
								"sink": {
									"path": "$['IsActive']"
								}
							},
							{
								"source": {
									"name": "Url_t",
									"type": "String"
								},
								"sink": {
									"path": "$['Url_t']"
								}
							},
							{
								"source": {
									"name": "Headers_t",
									"type": "String"
								},
								"sink": {
									"path": "$['Headers_t']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_q2w",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_q2w",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete_Data_perMonth",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy_q2w",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "techreoprod",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "\tBEGIN TRANSACTION;  \n\tDELETE\n\tFROM [Cmn_Log].[dbo].[logt_ProvidersLog]\n\tWHERE [CreationDate] between\n\t\t(\n\tselect cast('2023-03-01 00:00:00:000' as datetime)\n\t)\nand\n\t(\n\tselect dateadd(millisecond, -2, dateadd(day, 31, cast('2023-03-01 00:00:00:000' as datetime)))\n\t)\n\n\tCOMMIT TRANSACTION;  "
						}
					],
					"scriptBlockExecutionTimeout": "04:00:00",
					"logSettings": {
						"logDestination": "ExternalStore",
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "linkedService_azurestoact",
								"type": "LinkedServiceReference"
							},
							"path": "output-logt-providerslog-2023"
						}
					}
				}
			}
		],
		"annotations": []
	}
}