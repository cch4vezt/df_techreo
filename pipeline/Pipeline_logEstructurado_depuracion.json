{
	"name": "Pipeline_logEstructurado_depuracion",
	"properties": {
		"description": "Depuración de información por día",
		"activities": [
			{
				"name": "Copy_x1s",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "."
					},
					{
						"name": "Destination",
						"value": "output-df/@{formatDateTime(pipeline().parameters.windowStart,'yy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}@{formatDateTime(pipeline().parameters.windowStart,'HH')}@{formatDateTime(pipeline().parameters.windowStart,'mm')}{seconds}/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": "select [Id]\n      ,[FechaHoraEventoUTC]\n      ,[Aplicativo]\n      ,[CodigoRastreo]\n      ,[RequestId]\n      ,[Severidad]\n      ,[Mensaje]\n      ,[Propiedades]\n      ,[Error]\n      ,[FechaHoraRegistro]\nfrom [Cmn_Log].[dbo].[logt_LogEstructurado]\nwhere [FechaHoraRegistro] between (\n\tselect top 1 [FechaHoraRegistro]\n\tfrom [Cmn_Log].[dbo].[logt_LogEstructurado]) and\n\t(select top 1 [FechaHoraRegistro] + 1\n\tfrom [Cmn_Log].[dbo].[logt_LogEstructurado]\n\t)\norder by [Id] asc",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "setOfObjects"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Id",
									"type": "Int64"
								},
								"sink": {
									"path": "$['Id']"
								}
							},
							{
								"source": {
									"name": "FechaHoraEventoUTC",
									"type": "DateTime"
								},
								"sink": {
									"path": "$['FechaHoraEventoUTC']"
								}
							},
							{
								"source": {
									"name": "Aplicativo",
									"type": "String"
								},
								"sink": {
									"path": "$['Aplicativo']"
								}
							},
							{
								"source": {
									"name": "CodigoRastreo",
									"type": "String"
								},
								"sink": {
									"path": "$['CodigoRastreo']"
								}
							},
							{
								"source": {
									"name": "RequestId",
									"type": "String"
								},
								"sink": {
									"path": "$['RequestId']"
								}
							},
							{
								"source": {
									"name": "Severidad",
									"type": "String"
								},
								"sink": {
									"path": "$['Severidad']"
								}
							},
							{
								"source": {
									"name": "Mensaje",
									"type": "String"
								},
								"sink": {
									"path": "$['Mensaje']"
								}
							},
							{
								"source": {
									"name": "Propiedades",
									"type": "String"
								},
								"sink": {
									"path": "$['Propiedades']"
								}
							},
							{
								"source": {
									"name": "Error",
									"type": "String"
								},
								"sink": {
									"path": "$['Error']"
								}
							},
							{
								"source": {
									"name": "FechaHoraRegistro",
									"type": "DateTime"
								},
								"sink": {
									"path": "$['FechaHoraRegistro']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_x1s",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_x1s",
						"type": "DatasetReference",
						"parameters": {
							"cw_folderPath": "@{formatDateTime(pipeline().parameters.windowStart,'yy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}@{formatDateTime(pipeline().parameters.windowStart,'HH')}@{formatDateTime(pipeline().parameters.windowStart,'mm')}"
						}
					}
				]
			},
			{
				"name": "sp_depurar_data",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_x1s",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[deleteRowsLogEstructuradoPerDay]"
				},
				"linkedServiceName": {
					"referenceName": "techreoprod",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"windowStart": {
				"type": "String"
			},
			"windowEnd": {
				"type": "String"
			}
		},
		"annotations": []
	}
}